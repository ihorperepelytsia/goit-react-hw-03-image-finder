{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/App/App.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","utils/overrideLoader.js","service/fetchImagesAPI.js","utils/warningInput.js","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.jsx","utils/mapperImages.js","components/Button/Button.jsx","components/App/App.jsx","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","overrideLoader","css","btnLoader","KEY_ID","fetchImages","query","page","axios","get","warningInput","data","length","error","text","Searchbar","state","handleChange","target","name","value","setState","handleSubmit","e","preventDefault","props","onSubmit","this","className","Searchbarr","SearchForm","type","SearchFormBtn","SearchFormBtnLabel","SearchFormInput","autoComplete","autoFocus","onChange","placeholder","Component","ImageGalleryItem","webformatURL","tags","onOpenModal","ImageGaleryItem","src","alt","ImageGalleryItemImage","onClick","ImageGallery","images","ImagesGallery","map","img","key","id","largeImageURL","Modal","backdropRef","createRef","handleKeyPress","code","onCloseModal","handleBackdropClick","current","window","addEventListener","removeEventListener","Overlay","ref","Modall","mapperImages","Button","isLoading","btn","size","color","App","isModalOpen","fetchImagesAPI","then","hits","catch","finally","handleLoadMore","setTimeout","scrollTo","top","document","documentElement","scrollHeight","behavior","prevState","openModal","closeModal","box","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c380bc31.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3AIjF\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__60XK-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__ln64V\",\"Modal\":\"Modal_Modal__2zgSq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3SAy6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImagesGallery\":\"ImageGallery_ImagesGallery__x-_pI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__1fa38\"};","import { css } from '@emotion/core';\r\n\r\nexport const overrideLoader = css`\r\n  display: block;\r\n  margin: 100px auto;\r\n`;\r\n\r\nexport const btnLoader = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n`;\r\n","import axios from 'axios';\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\nconst KEY_ID = '&key=15725312-965e6abfe89225a1afd144b44';\r\n\r\nexport const fetchImages = (query = '', page = 1) =>\r\n  axios.get(\r\n    `${BASE_URL}?q=${query}&page=${page}${KEY_ID}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  );\r\n","import { error } from '@pnotify/core';\r\nimport '@pnotify/core/BrightTheme.css';\r\nimport '@pnotify/core/dist/PNotify.css';\r\n\r\nconst warningInput = data => {\r\n  if (data.length === 0) {\r\n    error({\r\n      text: 'No results were found for your request.',\r\n    });\r\n  }\r\n};\r\n\r\nexport default warningInput;\r\n","import React, { Component } from 'react';\r\nimport { error } from '@pnotify/core';\r\nimport '@pnotify/core/BrightTheme.css';\r\nimport '@pnotify/core/dist/PNotify.css';\r\nimport {\r\n  Searchbar as Searchbarr,\r\n  SearchForm,\r\n  SearchFormBtn,\r\n  SearchFormBtnLabel,\r\n  SearchFormInput,\r\n} from './Searchbar.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.query.length <= 1) {\r\n      error({\r\n        text: 'Enter more information',\r\n      });\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  render() {\r\n    const { query } = this.state;\r\n    return (\r\n      <header className={Searchbarr}>\r\n        <form className={SearchForm} onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className={SearchFormBtn}>\r\n            <span className={SearchFormBtnLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={SearchFormInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            name=\"query\"\r\n            value={query}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {\r\n  ImageGaleryItem,\r\n  ImageGalleryItemImage,\r\n} from './ImageGalleryItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ webformatURL, tags, onOpenModal }) => (\r\n  <>\r\n    <li className={ImageGaleryItem}>\r\n      <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        className={ImageGalleryItemImage}\r\n        onClick={onOpenModal}\r\n      />\r\n    </li>\r\n  </>\r\n);\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  onOpenModal: PropTypes.func.isRequired,\r\n};\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport { ImagesGallery } from './ImageGallery.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGallery = ({ images, onOpenModal }) => (\r\n  <>\r\n    <ul className={ImagesGallery}>\r\n      {images.map(img => (\r\n        <ImageGalleryItem\r\n          key={img.id}\r\n          {...img}\r\n          onOpenModal={() => onOpenModal(img.largeImageURL, img.tags)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  </>\r\n);\r\n\r\nImageGallery.propTypes = {\r\n  onOpenModal: PropTypes.func.isRequired,\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({ id: PropTypes.number.isRequired }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React, { Component, createRef } from 'react';\r\nimport { Overlay, Modall } from './Modal.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class Modal extends Component {\r\n  static propTypes = {\r\n    largeImageURL: PropTypes.string.isRequired,\r\n    onCloseModal: PropTypes.func.isRequired,\r\n  };\r\n\r\n  backdropRef = createRef();\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyPress);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyPress);\r\n  }\r\n\r\n  handleKeyPress = e => {\r\n    if (e.code !== 'Escape') return;\r\n\r\n    this.props.onCloseModal();\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    const { current } = this.backdropRef;\r\n\r\n    if (current && e.target !== current) {\r\n      return;\r\n    }\r\n\r\n    this.props.onCloseModal();\r\n  };\r\n\r\n  render() {\r\n    const { largeImageURL, tags } = this.props;\r\n    return (\r\n      <>\r\n        <div\r\n          className={Overlay}\r\n          ref={this.backdropRef}\r\n          onClick={this.handleBackdropClick}\r\n        >\r\n          <div className={Modall}>\r\n            <img src={largeImageURL} alt={tags} />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","const mapperImages = images => {\r\n  return images.map(({ id, webformatURL, largeImageURL, tags }) => ({\r\n    id,\r\n    webformatURL,\r\n    largeImageURL,\r\n    tags,\r\n  }));\r\n};\r\n\r\nexport default mapperImages;\r\n","import React from 'react';\r\nimport { btn } from './Button.module.css';\r\nimport MoonLoader from 'react-spinners/MoonLoader';\r\nimport { btnLoader } from '../../utils/overrideLoader';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onClick, isLoading }) => {\r\n  return (\r\n    <div>\r\n      <button className={btn} type=\"submit\" onClick={onClick}>\r\n        {isLoading ? (\r\n          <MoonLoader css={btnLoader} size={18} color={'#fff'} />\r\n        ) : (\r\n          'Load more...'\r\n        )}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  isLoading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport { App as box } from './App.module.css';\r\nimport MoonLoader from 'react-spinners/MoonLoader';\r\nimport { overrideLoader } from '../../utils/overrideLoader';\r\nimport { fetchImages } from '../../service/fetchImagesAPI';\r\nimport warningInput from '../../utils/warningInput';\r\nimport Searchbar from '../Searchbar/Searchbar';\r\nimport ImageGallery from '../ImageGallery/ImageGallery';\r\nimport Modal from '../Modal/Modal';\r\nimport mapperImages from '../../utils/mapperImages';\r\nimport Button from '../Button/Button';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    images: [],\r\n    page: 1,\r\n    largeImageURL: '',\r\n    tags: '',\r\n    isLoading: false,\r\n    isModalOpen: false,\r\n    error: null,\r\n  };\r\n\r\n  fetchImagesAPI = query => {\r\n    this.setState({ isLoading: true });\r\n\r\n    fetchImages(query)\r\n      .then(({ data }) => {\r\n        this.setState({\r\n          images: mapperImages(data.hits),\r\n          query,\r\n        });\r\n        warningInput(data.hits);\r\n      })\r\n      .catch(error => this.setState({ error }))\r\n      .finally(() => this.setState({ isLoading: false }));\r\n  };\r\n\r\n  handleLoadMore = e => {\r\n    this.setState({ isLoading: true });\r\n    setTimeout(() => {\r\n      window.scrollTo({\r\n        top: document.documentElement.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    }, 1500);\r\n\r\n    fetchImages(this.state.query, this.state.page + 1)\r\n      .then(({ data }) => {\r\n        this.setState(prevState => ({\r\n          images: [...prevState.images, ...mapperImages(data.hits)],\r\n          page: prevState.page + 1,\r\n        }));\r\n      })\r\n      .catch(error => this.setState({ error }))\r\n      .finally(() => this.setState({ isLoading: false }));\r\n  };\r\n\r\n  openModal = (webformatURL, tags) =>\r\n    this.setState({\r\n      isModalOpen: true,\r\n      largeImageURL: webformatURL,\r\n      tags: tags,\r\n    });\r\n\r\n  closeModal = () => this.setState({ isModalOpen: false, largeImageURL: '' });\r\n\r\n  render() {\r\n    const { images, isLoading, isModalOpen, largeImageURL, tags } = this.state;\r\n\r\n    return (\r\n      <div className={box}>\r\n        <Searchbar onSubmit={this.fetchImagesAPI} />\r\n        {/* {isLoading ? (\r\n          <MoonLoader css={overrideLoader} size={100} color={'#000'} />\r\n        ) : (\r\n          <ImageGallery images={images} onOpenModal={this.openModal} />\r\n        )} */}\r\n        {isLoading && (\r\n          <MoonLoader css={overrideLoader} size={100} color={'#000'} />\r\n        )}\r\n\r\n        {!!images.length && (\r\n          <ImageGallery images={images} onOpenModal={this.openModal} />\r\n        )}\r\n        {/* <Button onClick={this.isLoad} /> */}\r\n        {!!images.length && (\r\n          <Button onClick={this.handleLoadMore} isLoading={isLoading} />\r\n        )}\r\n        {isModalOpen && (\r\n          <Modal\r\n            largeImageURL={largeImageURL}\r\n            tags={tags}\r\n            onCloseModal={this.closeModal}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3ipNL\",\"SearchForm\":\"Searchbar_SearchForm__2hUjV\",\"SearchFormBtn\":\"Searchbar_SearchFormBtn__3HGbh\",\"SearchFormBtnLabel\":\"Searchbar_SearchFormBtnLabel__3GTXK\",\"SearchFormInput\":\"Searchbar_SearchFormInput__2SLM1\"};"],"sourceRoot":""}